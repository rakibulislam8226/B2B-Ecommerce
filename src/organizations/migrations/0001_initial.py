# Generated by Django 4.2.3 on 2023-07-17 10:35

import autoslug.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('house_no', models.CharField(max_length=30)),
                ('village', models.CharField(max_length=100)),
                ('post_office', models.CharField(max_length=10)),
                ('thana', models.CharField(max_length=50)),
                ('district', models.CharField(max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('slug', autoslug.fields.AutoSlugField(editable=False, max_length=255, populate_from='name')),
                ('website', models.URLField(blank=True, help_text='www.example.com', null=True)),
                ('address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='organizations.address')),
            ],
            options={
                'verbose_name': 'Organization',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='OrganizationEmployee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('slug', autoslug.fields.AutoSlugField(editable=False, max_length=255, populate_from='role')),
                ('role', models.CharField(choices=[('Owner', 'Owner'), ('Admin', 'Admin'), ('Stuff', 'Stuff'), ('Customer', 'Customer')], default='Customer', max_length=255)),
                ('is_default', models.BooleanField(default=False)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='organizations.organization')),
                ('user', models.ManyToManyField(help_text='It is employee of the comapny.', related_name='organization_employee', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Organizations Employee',
                'ordering': ('-id',),
            },
        ),
        migrations.CreateModel(
            name='OrganizationConnection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('connection_type', models.CharField(choices=[('Accepted', 'Accepted'), ('Rejected', 'Rejected'), ('Pending', 'Pending')], default='Pending', max_length=255)),
                ('from_organization', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='from_organization', to='organizations.organization')),
                ('to_organization', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='to_organization', to='organizations.organization')),
            ],
            options={
                'verbose_name': 'Organizations Connection',
                'ordering': ('-id',),
            },
        ),
    ]
